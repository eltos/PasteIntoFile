# When a release is published on github.com, this workflow creates a release build and uploads it to the release page

name: Release

on:
  release:
    types: [ published ]

jobs:

  portable-build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/build
        with:
          configuration: Release
          flavor: Portable
          artifact: release_artifact_portable

  portable-publish:
    runs-on: windows-2019
    needs: portable-build
    steps:
      - name: Collect artifact
        uses: actions/download-artifact@v4
        with:
          name: release_artifact_portable
          path: release_artifact_portable
      - name: Create zip
        run: Compress-Archive -Path release_artifact_portable/* -Destination release_artifact_portable.zip
        #run: tar -cvzf release_artifact_portable.tar.gz -C release_artifact_portable *
      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: release_artifact_portable.zip
          asset_name: PasteIntoFile_${{ github.event.release.tag_name }}_portable.zip
          asset_content_type: application/zip

  installer:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build program executable
        id: build
        uses: ./.github/build
        with:
          configuration: Release
          flavor: Installer
      - name: Add WiX toolkit to PATH
        shell: bash
        run: echo "${WIX}bin" >> $GITHUB_PATH
      - name: Build MSI file with WiX toolchain
        run: |
          cd Installer
          heat dir ../${{steps.build.outputs.path}} -dr INSTALLFOLDER -ag -cg ReleaseFragment -ke -srd -sfrag -nologo -pog:Binaries -pog:Documents -pog: Satellites -pog:Sources -pog:Content -t releaseFiles.xslt -out releaseFiles.wxs
          candle releaseFiles.wxs
          candle PasteIntoFile.wxs
          light -b ../${{steps.build.outputs.path}} releaseFiles.wixobj PasteIntoFile.wixobj -ext WixNetFxExtension -out Installer.msi
      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: Installer/Installer.msi
          asset_name: PasteIntoFile_${{ github.event.release.tag_name }}_installer.msi
          asset_content_type: application/msi

