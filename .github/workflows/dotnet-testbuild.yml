# For all pushes and pull_request, this workflow creates a debug build

name: Test Build

on: [ push, pull_request ]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        flavor: [Installer, Portable]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/build
        with:
          configuration: Debug
          flavor: ${{ matrix.flavor }}
          artifact: ${{ matrix.flavor == 'Portable' && 'PasteIntoFile_debug_portable' || '' }}

  installer:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build program executable
        id: build
        uses: ./.github/build
        with:
          configuration: Release
          flavor: Installer
      - name: Add WiX toolkit to PATH
        shell: bash
        run: echo "${WIX}bin" >> $GITHUB_PATH
      - name: Build MSI file with WiX toolchain
        run: |
          cd Installer
          heat dir ../${{steps.build.outputs.path}} -dr INSTALLFOLDER -ag -cg ReleaseFragment -ke -srd -sfrag -nologo -pog:Binaries -pog:Documents -pog: Satellites -pog:Sources -pog:Content -t releaseFiles.xslt -out releaseFiles.wxs
          candle releaseFiles.wxs
          candle PasteIntoFile.wxs
          light -b ../${{steps.build.outputs.path}} releaseFiles.wixobj PasteIntoFile.wixobj -ext WixNetFxExtension -out Installer.msi
      

#  test:
#    runs-on: windows-2019    # For a list of available runner types, refer to https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      ## Install the .NET Core workload
#      ## This is not required since the windows-2019 runner comes with pre-installed .NET Framework
#      #- name: Install .NET Core
#      #  uses: actions/setup-dotnet@v4
#      #  with:
#      #    dotnet-version: 5.0.x
#
#      # Execute all unit tests in the solution
#      - name: Execute unit tests
#        run: dotnet test
